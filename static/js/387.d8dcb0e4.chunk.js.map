{"version":3,"file":"static/js/387.d8dcb0e4.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","helpers/index.js","service/movie-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Grid = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 10px;\n`;\nexport const GridItem = styled.li`\n  list-style: none;\n  align-items: center;\n  justify-content: center;\n  margin: 15px;\n`;\nexport const Image = styled.img`\n  width: 100%;\n  max-width: 250px;\n  max-height: 350px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Text = styled.p`\n  font-size: 24px;\n  font-style: italic;\n  font-weight: 400;\n  margin-block-start: 5px;\n  text-align: left;\n  margin-bottom: 0;\n`;\n","import { fetchCast } from \"service/movie-service\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid, GridItem, Image, Text } from \"./Cast.styled\";\n\n\nconst Cast = () => {\n    const [castInfo, setCastInfo] = useState(null);\n    const { movieId } = useParams();\n    const defaultImg =\n        'https://via.placeholder.com/185x278.png?text=Image+Not+Found';\n    useEffect(() => {\n\n        if (!movieId) return;\n        const castInfo = async () => {\n\n            try {\n                const cast = await fetchCast(movieId);\n                setCastInfo(cast.cast);\n\n            } catch (error) {\n\n            } finally {\n\n            }\n        };\n        castInfo();\n    }, [movieId])\n    return (\n        <Grid>\n            {castInfo &&\n                castInfo.map(({ original_name, character, profile_path, id }) => (\n                    <GridItem key={id}>\n                        <Image\n                            src={\n                                profile_path\n                                    ? `https://image.tmdb.org/t/p/w185${profile_path}`\n                                    : defaultImg\n                            }\n                            width={250}\n                            alt={original_name}\n                        />\n                        <Text>{original_name}</Text>\n                        <Text>Character: {character}</Text>\n                    </GridItem>\n                ))}\n        </Grid>\n    );\n};\n\n\n\nexport default Cast;","export const transformMoviesData = data => {\n  return data.results.map(({ id, title, poster_path }) => ({\n    id: id,\n    name: title,\n    image: poster_path,\n  }));\n};\nexport function percent(score) {\n  return Math.floor(score * 10);\n}\n","import axios from 'axios';\nimport { transformMoviesData } from 'helpers';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNjM1ZDU0ZGIwZTYzYWUwMTQ3YTVjZTFlYjgxN2M2MCIsInN1YiI6IjY1NmEzZTQzODgwNTUxMDBlMzZlOTA4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vW42diD1EHMv5qCPA3pJuLvBTBkvCrVPZu8_GWSoEUk';\naxios.defaults.headers.common['Authorization'] = `Bearer  ${API_KEY}`;\n\nexport const getMoviesList = async () => {\n  const { data } = await axios.get(`/trending/movie/day`);\n  const movies = transformMoviesData(data);\n  return movies;\n};\nexport const fetchMovie = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\nexport const fetchByName = async query => {\n  const { data } = await axios.get(`/search/movie?query=${query}`);\n  const movies = transformMoviesData(data);\n  return movies;\n};\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data;\n};\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["Grid","styled","_templateObject","_taggedTemplateLiteral","GridItem","_templateObject2","Image","_templateObject3","Text","_templateObject4","_useState","useState","_useState2","_slicedToArray","castInfo","setCastInfo","movieId","useParams","useEffect","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","cast","_context","prev","next","fetchCast","sent","t0","finish","stop","apply","arguments","_jsx","children","map","_ref2","original_name","character","profile_path","id","_jsxs","src","concat","width","alt","transformMoviesData","data","results","name","title","image","poster_path","percent","score","Math","floor","axios","getMoviesList","_yield$axios$get","movies","abrupt","fetchMovie","_callee2","_yield$axios$get2","_context2","_x","fetchByName","_ref3","_callee3","query","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}